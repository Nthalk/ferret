/**
 * This class is generated by jOOQ
 */
package com.iodesystems.ferret.db.tables.records;


import com.iodesystems.ferret.db.tables.Field;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FieldRecord extends UpdatableRecordImpl<FieldRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = 1837444332;

    /**
     * Setter for <code>ferret.field.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ferret.field.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ferret.field.table_id</code>.
     */
    public void setTableId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>ferret.field.table_id</code>.
     */
    public Integer getTableId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>ferret.field.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ferret.field.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<Integer> field1() {
        return Field.FIELD.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<Integer> field2() {
        return Field.FIELD.TABLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field3() {
        return Field.FIELD.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getTableId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value2(Integer value) {
        setTableId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FieldRecord
     */
    public FieldRecord() {
        super(Field.FIELD);
    }

    /**
     * Create a detached, initialised FieldRecord
     */
    public FieldRecord(Integer id, Integer tableId, String name) {
        super(Field.FIELD);

        set(0, id);
        set(1, tableId);
        set(2, name);
    }
}
